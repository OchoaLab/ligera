% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ligera.R
\name{ligera}
\alias{ligera}
\title{LIGERA: LIght GEnetic Robust Association main function}
\usage{
ligera(
  X,
  trait,
  kinship,
  kinship_inv = NULL,
  loci_on_cols = FALSE,
  mem_factor = 0.7,
  mem_lim = NA,
  tol = 1e-15,
  maxIter = 1e+06
)
}
\arguments{
\item{X}{The \code{m}-by-\code{n} genotype matrix, containing dosage values in (0, 1, 2, NA) for the reference allele at each locus.}

\item{trait}{The length-\code{n} trait vector, which may be real valued and contain missing values.}

\item{kinship}{The \code{n}-by-\code{n} kinship matrix, estimated by other methods (i.e. the \code{popkin} package).}

\item{kinship_inv}{The optional matrix inverse of the kinship matrix.  Setting this parameter is not recommended, as internally a conjugate gradient method (\verb{\link[cPCG]\{cgsolve\}}) is used to implicitly invert this matrix, which is much faster.  However, for very large numbers of traits without missingness and the same kinship matrix, inverting once might be faster.}

\item{loci_on_cols}{If \code{TRUE}, \code{X} has loci on columns and individuals on rows; if false (the default), loci are on rows and individuals on columns.
If \code{X} is a BEDMatrix object, \code{loci_on_cols = TRUE} is set automatically.}

\item{mem_factor}{Proportion of available memory to use loading and processing genotypes.
Ignored if \code{mem_lim} is not \code{NA}.}

\item{mem_lim}{Memory limit in GB, used to break up genotype data into chunks for very large datasets.
Note memory usage is somewhat underestimated and is not controlled strictly.
Default in Linux and Windows is \code{mem_factor} times the free system memory, otherwise it is 1GB (OSX and other systems).}

\item{tol}{Tolerance value passed to \verb{\link[cPCG]\{cgsolve\}}.}

\item{maxIter}{Maximum number of iterations passed to \verb{\link[cPCG]\{cgsolve\}}.}
}
\value{
A tibble containing the following association statistics
\itemize{
\item \code{pval}: The p-value of the association test
\item \code{beta}: The estimated effect size coefficient for the trait vector at this locus
\item \code{beta_std_dev}: The estimated coefficient variance of this locus (varies due to dependence on minor allele frequency)
\item \code{p_q}: The allele variance estimate (estimate of \code{p*(1-p)}).  The number of heterozygotes, weighted by inbreeding coefficient, and with pseudocounts included, is used in this estimate (in other words, it does not equal MAF * ( 1 - MAF ), where MAF is the marginal allele frequency.
\item \code{t_stat}: The test statistic, equal to \code{beta / beta_std_dev}.
}
}
\description{
This function performs the genetic association tests on every locus of a genotype matrix against a quantitative trait, given a precomputed kinship matrix.
The function returns a tibble containing association statistics and several intermediates.
}
\details{
Suppose there are \code{n} individuals and \code{m} loci.
}
\examples{
# Construct toy data
# genotype matrix
X <- matrix(
    c(0, 1, 2,
      1, 0, 1,
      1, 0, 2),
    nrow = 3,
    byrow = TRUE
)
trait <- 1 : 3
kinship <- diag( 3 ) / 2 # unstructured case

tib <- ligera( X, trait, kinship )
tib

}
\seealso{
The \code{popkin} and \code{cPCG} packages.
}
